name: My Update GitOps Manifests

on:
  workflow_dispatch:
    inputs:
      service:
        description: "Path to the service to deploy (go/api-golang)"
        required: true
        type: choice
        options:
          - services/go/api-golang
          - services/node/api-node
          - services/other/api-golang-migrator
          - services/python/load-generator-python
          - services/react/client-react
      version:
        description: "Version to deploy"
        required: true
        type: string
      environment:
        description: "Target environment to deploy to"
        required: true
        type: choice
        options:
          - development
          - staging
          - production

concurrency: 
  group: ${{ github.workflow }}-gitops-${{ inputs.environment }}-${{ inputs.service }}
  cancel-in-progress: false


jobs:
  update-manifests:
    runs-on: ubuntu-24.04
    environment: ${{ inputs.environment }} 
    permissions:
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #4.2.2
      - name: Install task
        uses: ./.github/actions/setup-dependencies

      - name: Generate Commit Message
        id: generate-commit-message
        run: |
          commit_message="chore: update ${{ inputs.environment }}, ${{ inputs.service }} ${{ inputs.version }} [skip ci]"
          echo "commit_message=${commit_message}" >> $GITHUB_OUTPUT


      - name: Update Manifests
        working-directory: ${{ inputs.service }}
        run: | 
          task utils:update-image-tags-service \
            NEW_TAG=${{ inputs.version }} \
            ENVIRONMENT=${{ inputs.environment }}
      
      - name: check diff git commit
        run: |
          git --no-pager diff
      
      # First attempt, we used stefanzweifel/git-auto-commit-action but ran into issues with concurrent execution and the working branch being outdated
      # Alternatively, we could use peter-evans/create-pull-request to generate a PR instead
      - name: Commit & push (via Task)
        if: ${{ !env.ACT }}
        working-directory: ${{ inputs.service }}
        run: |
          task utils:git:commit-push \
            COMMIT_MSG="${{ steps.generate-commit-message.outputs.commit_message }}" \
            BRANCH=main