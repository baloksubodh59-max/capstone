name: My Build and Push Container Images

on:
  workflow_dispatch:
    inputs:
      service:
        description: "Service to build"
        type: choice
        required: true
        options:
          - services/go/api-golang
          - services/node/api-node
          - services/other/api-golang-migrator
          - services/python/load-generator-python
          - services/react/client-react
      version:
        description: "Version/tag to use (optional; defaults generating with git describe)"
        required: false
        type: string
  push:
    branches:
      - main
    paths:
      - services/**
    tags:
      - "**@[0-9]*.[0-9]*.[0-9]*" # service/foo/bar@X.Y.Z

jobs:
  filter:
    runs-on: ubuntu-24.04
    outputs:
      services: ${{ steps.set-output.outputs.services }}
      environment: ${{ steps.set-output.outputs.environment }}
    steps:
      - name: Checkout Code
        # uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #5.0.0
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #4.2.2

      - name: filter
        id: filter
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 #v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: .github/utils/my-file-filters.yaml
          # base: HEAD

      - name: Set Output
        id: set-output
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "::debug::This is a debug message environment should be development"
            echo 'services=["${{ inputs.service }}"]' >> "$GITHUB_OUTPUT"
            echo 'environment=development' >> "$GITHUB_OUTPUT"

          elif [[ "${{ github.ref_type }}" == "tag" ]]; then
            echo "::debug::This is a debug message environment should be production"
            tag="${GITHUB_REF_NAME}"        # e.g. service-a@1.2.3
            svc="${tag%%@*}"
            echo "services=[\"$svc\"]" >> "$GITHUB_OUTPUT"
            echo 'environment=production' >> "$GITHUB_OUTPUT"

          else # push to main
            echo "::debug::This is a debug message environment should be staging"
            echo 'services=${{ steps.filter.outputs.changes }}' >> "$GITHUB_OUTPUT"
            echo 'environment=staging' >> "$GITHUB_OUTPUT"
          fi

          echo "services:${services}"
          echo "environment:${environment}"

  build-push-images:
    runs-on: ubuntu-24.04
    needs: filter
    if: ${{ needs.filter.outputs.services != '[]' && needs.filter.outputs.services != '' }}
    permissions: # used to trigger deploy workflow
      actions: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        service: ${{ fromJson(needs.filter.outputs.services) }}
        # service: ["services/node/api-node"]

    steps:
      - name: Checkout Code
        # uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #5.0.0
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #4.2.2
        with:
          fetch-depth: 0

      - name: Install task
        uses: ./.github/actions/setup-dependencies

      - name: Login to Docker Hub
        if: ${{ !env.ACT }}
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef #v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@e77e8065d9f7ec6abdd9838668cd7b43924dd64d # v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@1583c0f09d26c58c59d25b0eef29792b7ce99d9a #v3

      - name: Compute image tags
        id: image-tag
        working-directory: ${{ matrix.service }}
        env:
          ENVIRONMENT: ${{ needs.filter.outputs.environment }}
          INPUT_VERSION: ${{ github.event_name == 'workflow_dispatch' && inputs.version || '' }}
          SERVICE: ${{ matrix.service }}
        run: |
          if [[ -n "$INPUT_VERSION" ]]; then
            version=$INPUT_VERSION
            image_tag=$(task utils:manual-version-tag -- "$INPUT_VERSION")
          elif [[ "$ENVIRONMENT" == "production" ]]; then
            version=$(task utils:generate-version -- "$SERVICE")
            image_tag=$(task utils:generate-version-tag -- "$SERVICE")
          else
            version=$(task utils:generate-extended-version -- "$SERVICE")
            image_tag=$(task utils:generate-extended-version-tag -- "$SERVICE")
          fi
          echo "version=${version}" >> $GITHUB_OUTPUT
          echo "image_tag=${image_tag}" >> $GITHUB_OUTPUT
          # TODO: generate the actual version/tag
          echo "version=${version}" 
          echo "image_tag=${image_tag}"

      - name: Build and push
        uses: docker/build-push-action@9e436ba9f2d7bcd1d038c8e55d039d37896ddc5d #v6
        with:
          context: ${{ matrix.service }}
          push: ${{ !env.ACT }}
          tags: ${{ steps.image-tag.outputs.image_tag }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Trigger deploy as a separate workflow to:
      #   1. enable running it manually via workflow_dispatch
      #   2. keep workflows smaller and more focused
      # We could use reuseable workflow (with workflow_call trigger... but being able to trigger manually is nice)
      - name: Trigger Deploy
        if: ${{ !env.ACT }} # Don't trigger deploy when running locally
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
        
          gh workflow run my-update-gitops-manifests.yaml \
            -f service=${{ matrix.service }} \
            -f version=${{ steps.image-tag.outputs.version }} \
            -f environment=${{ needs.filter.outputs.environment }} 
