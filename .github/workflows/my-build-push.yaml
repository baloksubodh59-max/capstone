name: My Build and Push Container Images

on:
  workflow_dispatch:

jobs:
  filter:
    runs-on: ubuntu-24.04
    outputs:
      services: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #5.0.0

      - name: filter
        id: filter
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 #v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: .github/utils/my-file-filters.yaml
      
  build-push-images:
    runs-on: ubuntu-24.04
    needs: filter
    strategy:
      fail-fast: false
      matrix:
        # service: ${{ fromJson(needs.filter.outputs.services) }}
        service: ["services/node/api-node"]

    steps:
      - name: Checkout Code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #5.0.0
        with:
          fetch-depth: 0
      - name: Install task
        uses: ./.github/actions/setup-dependencies


      # - name: Login to Docker Hub
      #   if: ${{ !env.ACT }}
      #   uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef #v3
      #   with:
      #     username: ${{ vars.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@e77e8065d9f7ec6abdd9838668cd7b43924dd64d   # v3

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@1583c0f09d26c58c59d25b0eef29792b7ce99d9a   #v3

      - name: Compute image tags
        id: image-tag
        working-directory: ${{ matrix.service }}
        env:
          ENVIRONMENT: production
          SERVICE: ${{ matrix.service }}
        run: | 
          version=$(task utils:generate-version -- "$SERVICE")
          image_tag=$(task utils:generate-version-tag -- "$SERVICE")
          echo "version=${version}" >> $GITHUB_OUTPUT
          echo "image_tag=${image_tag}" >> $GITHUB_OUTPUT
          # TODO: generate the actual version/tag
          echo "version=${version}" 
          echo "image_tag=${image_tag}" 
    
      # - name: Build and push
      #   uses: docker/build-push-action@9e436ba9f2d7bcd1d038c8e55d039d37896ddc5d   #v6
      #   with:
      #     context: ${{ matrix.service }}
      #     push: ${{ !env.ACT }}
      #     tags: ${{ steps.image-tag.outputs.image-tag }}
      #     platforms: linux/amd64
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max